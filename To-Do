Tools Used: IntelliJ IDE, Spring Boot, Maven, Angular, JUnit

PART B
---------------
●  code including inheritance, polymorphism, and encapsulation (✔️)
Inheritance examples --> Custom interfaces includes UsersService, custom implementation of RoomServiceImpl (findFreeRooms)
Polymorphism --> Using Overloaded methods in HttpClient to pull from the same URL.
Encapsulation --> All entities include getter/setter and private methods where appropriate.

●  search functionality with multiple row results and displays(✔️)
Room search, display reservations option.

●  a database component with the functionality to securely add, modify, and delete the data (✔️)
Add -> Add rooms to reservations, add additions to rooms.
Modify -> You can update the additions you have on your room.
Delete -> Delete Reservations.

●  ability to generate reports with multiple columns, multiple rows, date-time stamps, and title (✔️)
Report tab on site.

●  validation functionality (✔️)
Validate that checkin time is before check out time. Validate that room is booked/not booked to display available rooms.

●  industry-appropriate security features (✔️)

●  design elements that make the application scalable (✔️)
Create Users Button
Add Rooms/Additions easily through bootstrap.
Room for additional links/pages

●  a user-friendly, functional GUI (✔️)
Scales up/down decently, less scrolling.

-------------------

PART C
-------------------------------------------
●  a design document including a class diagram and design diagram (✔️)

●  link to where the web app is hosted with HTML code (if applicable) (✔️)

●  link to the GitLab repository of the code indicating the version included in this submission (✔️)

●  user guide for setting up and running the application for maintenance purposes(✔️)

●  user guide for running the application from a user perspective(✔️)
------------------------------------------

PART D
------------------------------------------------

●  a test plan for a unit test, including screenshots(✔️)

●  unit test scripts (✔️)

●  the results of the unit tests based on the provided test plan, including screenshots (✔️)

●  summaries of changes resulting from completed tests. (✔️)

------------------------------------------------